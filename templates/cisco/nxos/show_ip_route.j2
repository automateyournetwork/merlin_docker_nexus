{% if filetype_loop_jinja2 == "csv" %}VRF,Address Family,Route,Active,Metric,Route Preference,Source Protocol,M Best,U Best,Next Hop Index,Next Hop,Best Unicast Nexthop,Metric,Route Preference,Source Protocol,Updated{% for vrf in to_parse_ip_route %}{% for address_family in to_parse_ip_route[vrf].address_family %}{% for route in to_parse_ip_route[vrf].address_family[address_family].routes %}{% for next_hop in to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list %}
{{ vrf }},{{ address_family }},{{ route }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].active }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].metric }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].route_preference }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].source_protocol }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].mbest }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].ubest }},{{ next_hop }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].next_hop }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].best_ucast_nexthop }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].metric }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].route_preference }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].source_protocol }},{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].updated }}{% endfor %}{% endfor %}{% endfor %}{% endfor %}
{% else %}{% if filetype_loop_jinja2 == "md" %}
# Show IP Route
| VRF | Address Family | Route | Active | Metric | Route Preference | Source Protocol | M Best | U Best | Next Hop Index | Next Hop | Best Unicast Nexthop | Metric | Route Preference | Source Protocol | Updated |
| --- | -------------- | ----- | ------ | ------ | ---------------- | --------------- | ------ | ------ | -------------- | -------- | -------------------- | ------ | ---------------- | --------------- | ------- |{% for vrf in to_parse_ip_route %}{% for address_family in to_parse_ip_route[vrf].address_family %}{% for route in to_parse_ip_route[vrf].address_family[address_family].routes %}{% for next_hop in to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list %}
| {{ vrf }} | {{ address_family }} | {{ route }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].active }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].metric }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].route_preference }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].source_protocol }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].mbest }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].ubest }} | {{ next_hop }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].next_hop }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].best_ucast_nexthop }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].metric }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].route_preference }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].source_protocol }} | {{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].updated }} |{% endfor %}{% endfor %}{% endfor %}{% endfor %}{% else %}
<html><head><link rel="stylesheet" href="../styles.css"></head><body>
<h1>Show IP Route</h1>
<table class="merlin-table">
  <thead>
  <tr>
    <th>VRF</th>
    <th>Address Family</th>
    <th>Route</th>
    <th>Active</th>
    <th>Metric</th>
    <th>Route Preference</th>
    <th>Source Protocol</th>
    <th>M Best</th>
    <th>U Best</th>
    <th>Next Hop Index</th>
    <th>Next Hop</th>
    <th>Best Unicast Nexthop</th>
    <th>Metric</th>
    <th>Route Preference</th>
    <th>Source Protocol</th>
    <th>Updated</th>
  </tr>
  </thead>
  <tbody>{% for vrf in to_parse_ip_route %}{% for address_family in to_parse_ip_route[vrf].address_family %}{% for route in to_parse_ip_route[vrf].address_family[address_family].routes %}{% for next_hop in to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list %}
  <tr>
    <td>{{ vrf }}</td>
    <td>{{ address_family }}</td>
    <td>{{ route }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].active }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].metric }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].route_preference }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].source_protocol }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].mbest }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].ubest }}</td>
    <td>{{ next_hop }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].next_hop }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].best_ucast_nexthop }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].metric }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].route_preference }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].source_protocol }}</td>
    <td>{{ to_parse_ip_route[vrf].address_family[address_family].routes[route].next_hop.next_hop_list[next_hop].updated }}</td>
  </tr>
  </tbody>{% endfor %}{% endfor %}{% endfor %}{% endfor %}  
</table>
<table class="merlin-table">
  <thead>
  <tr>
    <th>RAW JSON from pyATS</th>
    <th>RAW YAML from pyATS</th>
    <th>CSV File</th>
    <th>Markdown File</th>
    <th>ElasticSearch Schema</th>
    <th>ElasticSearch Search</th>    
  </tr>
  </thead>
  <tbody>
  <tr>
    <td><a href="/DevNet_Sandbox_Nexus9k_show_ip_route.json">RAW JSON File</a></td>
    <td><a href="/DevNet_Sandbox_Nexus9k_show_ip_route.yaml">RAW YAML File</a></td>
    <td><a href="/DevNet_Sandbox_Nexus9k_show_ip_route.csv">CSV File</a></td>
    <td><a href="/DevNet_Sandbox_Nexus9k_show_ip_route.md">Markdown File</a></td>
    <td><a href="http://localhost:9200/devnet_sandbox_nexus9k_show_ip_route?pretty">ElasticSearch Schema</a></td>
    <td><a href="http://localhost:9200/devnet_sandbox_nexus9k_show_ip_route/_search?pretty">Index</a></td>        
  </tr>
  </tbody>  
</table>
<table class="merlin-table">
  <thead>
    <tr>
      <th>Return to Services List</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="http://localhost:8080">Services List</a></td>
    </tr>
  </tbody>  
</table>
</body></html>{% endif %}{% endif %}