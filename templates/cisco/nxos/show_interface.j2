{% if filetype_loop_jinja2 == "csv" %}Interface,Description,Admin State,Enabled,Operational Status,Line Protocol,Link State,MAC Address,Phsyical Address,IP Address,Port Speed,Duplex,Bandwidth,Delay,Media Type,Ether Type,Medium,MTU,Port Mode,Type,Port Channel Interface,Port Channel Member,Last Link Flap,Interface Reset,Dedicated Interface,Efficient Ethernet,Encapsulation,Flow Control Send,Flow Control Receive,Auto MDIX,Reliability,Switchport Monitor,Beacon,Auto State,RX Load,TX Load,Input Bad Etype Drop,Input Broadcast,Input CRC Errors,Input Discard,Input Errors,Input Down Drop,Input Ignored,Input MAC Pause Frames,Input Multicast,Input No Buffer,Input Octets,Input Overrun,Input Oversize Frame,Input Total,Input Runts,Input Short Frame,Input Underrun,Input Unicast,Input Unknown,Input Watchdog,Input With Dribble,Output Babble,Output Broadcast,Output Collision,Output Deferred,Output Discard,Output Errors,Output Jumbo,Output Late Collision,Output Lost Carrier,Output MAC Pause Frames,Output Multicast,Output No Carrier,Output Octets,Output Total,Output Unicast,Last Counter Clear,Input rate,Input Rate Packets,Output Rate,Output Rate Packets,Load Interval,RX,TX{% for interface in to_parse_interface %}
{{ interface }},{% if to_parse_interface[interface].description is defined %}{{ to_parse_interface[interface].description }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].admin_state is defined %}{{ to_parse_interface[interface].admin_state }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].enabled is defined %}{{ to_parse_interface[interface].enabled }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].oper_status is defined %}{{ to_parse_interface[interface].oper_status }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].line_protocol is defined %}{{ to_parse_interface[interface].line_protocol }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].link_state is defined %}{{ to_parse_interface[interface].link_state }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].mac_address is defined %}{{ to_parse_interface[interface].mac_address }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].phys_address is defined %}{{ to_parse_interface[interface].phys_address }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].ipv4 is defined %}{% for ip in to_parse_interface[interface].ipv4 %}{{ ip }}{% endfor%}{% else %}N/A{% endif %},{% if to_parse_interface[interface].port_speed is defined %}{{ to_parse_interface[interface].port_speed }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].duplex_mode is defined %}{{ to_parse_interface[interface].duplex_mode }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].bandwidth is defined %}{{ to_parse_interface[interface].bandwidth }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].delay is defined %}{{ to_parse_interface[interface].delay }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].media_type is defined %}{{ to_parse_interface[interface].media_type }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].ethertype is defined %}{{ to_parse_interface[interface].ethertype }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].medium is defined %}{{ to_parse_interface[interface].medium }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].mtu is defined %}{{ to_parse_interface[interface].mtu }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].port_mode is defined %}{{ to_parse_interface[interface].port_mode }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].types is defined %}{{ to_parse_interface[interface].types }}{% else %}N/A{% endif %},{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_int) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_int }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{{ interface }}{% else %}N/A{% endif %}{% endif %},{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_member }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{% for member in to_parse_interface[interface].port_channel.port_channel_member_intfs %}{{ member }}{% endfor %}{% else %}N/A{% endif %}{% endif %},{% if to_parse_interface[interface].last_link_flapped is defined %}{{ to_parse_interface[interface].last_link_flapped }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].interface_reset is defined %}{{ to_parse_interface[interface].interface_reset }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].dedicated_interface is defined %}{{ to_parse_interface[interface].dedicated_interface }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].efficient_ethernet is defined %}{{ to_parse_interface[interface].efficient_ethernet }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].encapsulations is defined %}{{ to_parse_interface[interface].encapsulations.encapsulation }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].flow_control is defined %}{{ to_parse_interface[interface].flow_control.send }},{{ to_parse_interface[interface].flow_control.receive }}{% else %}N/A,N/A{% endif %},{% if to_parse_interface[interface].auto_mdix is defined %}{{ to_parse_interface[interface].auto_mdix }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].reliability is defined %}{{ to_parse_interface[interface].reliability }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].switchport_monitor is defined %}{{ to_parse_interface[interface].switchport_monitor }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].beacon is defined %}{{ to_parse_interface[interface].beacon }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].autostate is defined %}{{ to_parse_interface[interface].autostate }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].rxload is defined %}{{ to_parse_interface[interface].rxload }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].txload is defined %}{{ to_parse_interface[interface].txload }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters is defined %}{% if to_parse_interface[interface].counters.in_bad_etype_drop is defined %}{{ to_parse_interface[interface].counters.in_bad_etype_drop }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.in_broadcast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_crc_errors is defined %}{{ to_parse_interface[interface].counters.in_crc_errors }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_discard is defined %}{{ to_parse_interface[interface].counters.in_discard }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_errors is defined %}{{ to_parse_interface[interface].counters.in_errors }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_if_down_drop is defined %}{{ to_parse_interface[interface].counters.in_if_down_drop }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_ignored is defined %}{{ to_parse_interface[interface].counters.in_ignored }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.in_mac_pause_frames }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_multicast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_no_buffer is defined %}{{ to_parse_interface[interface].counters.in_no_buffer }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_octets is defined %}{{ to_parse_interface[interface].counters.in_octets }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_overrun is defined %}{{ to_parse_interface[interface].counters.in_overrun }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_oversize_frame is defined %}{{ to_parse_interface[interface].counters.in_oversize_frame }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_pkts is defined %}{{ to_parse_interface[interface].counters.in_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_runts is defined %}{{ to_parse_interface[interface].counters.in_runts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_short_frame is defined %}{{ to_parse_interface[interface].counters.in_short_frame }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_underrun is defined %}{{ to_parse_interface[interface].counters.in_underrun }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_unicast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_unknown_protos is defined %}{{ to_parse_interface[interface].counters.in_unknown_protos }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_watchdog is defined %}{{ to_parse_interface[interface].counters.in_watchdog }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_with_dribble is defined %}{{ to_parse_interface[interface].counters.in_with_dribble }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_babble is defined %}{{ to_parse_interface[interface].counters.out_babble }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.out_broadcast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_collision is defined %}{{ to_parse_interface[interface].counters.out_collision }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_deferred is defined %}{{ to_parse_interface[interface].counters.out_deferred }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_discard is defined %}{{ to_parse_interface[interface].counters.out_discard }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_errors is defined %}{{ to_parse_interface[interface].counters.out_errors }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_jumbo_packets is defined %}{{ to_parse_interface[interface].counters.out_jumbo_packets }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_late_collision is defined %}{{ to_parse_interface[interface].counters.out_late_collision }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_lost_carrier is defined %}{{ to_parse_interface[interface].counters.out_lost_carrier }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.out_mac_pause_frames }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_multicast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_no_carrier is defined %}{{ to_parse_interface[interface].counters.out_no_carrier }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_octets is defined %}{{ to_parse_interface[interface].counters.out_octets }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_pkts is defined %}{{ to_parse_interface[interface].counters.out_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_unicast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.last_clear is defined %}{{ to_parse_interface[interface].counters.last_clear }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.rate is defined %}{% if to_parse_interface[interface].counters.rate.in_rate is defined %}{{ to_parse_interface[interface].counters.rate.in_rate }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.rate.in_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.in_rate_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.rate.out_rate is defined %}{{ to_parse_interface[interface].counters.rate.out_rate }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.rate.out_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.out_rate_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.rate.load_interval is defined %}{{ to_parse_interface[interface].counters.rate.load_interval }}{% else %}N/A{% endif %}{% else %}N/A,N/A,N/A,N/A,N/A{% endif %},{% if to_parse_interface[interface].counters.rx is defined %}{{ to_parse_interface[interface].counters.rx }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.tx is defined %}{{ to_parse_interface[interface].counters.tx }}{% else %}N/A{% endif %}{% else %}N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A{% endif %}{% endfor %}{% else %}{% if filetype_loop_jinja2 == "md" %}
# Show Interface
| Interface | Description | Admin State | Enabled | Operational Status | Line Protocol | Link State | MAC Address | Phsyical Address | IP Address | Port Speed | Duplex | Bandwidth | Delay | Media Type | Ether Type | Medium | MTU | Port Mode | Type | Port Channel Interface | Port Channel Member | Last Link Flap | Interface Reset | Dedicated Interface | Efficient Ethernet | Encapsulation | Flow Control Send | Flow Control Receive | Auto MDIX | Reliability | Switchport Monitor | Beacon | Auto State | RX Load | TX Load | Input Bad Etype Drop | Input Broadcast | Input CRC Errors | Input Discard | Input Errors | Input Down Drop | Input Ignored | Input MAC Pause Frames | Input Multicast | Input No Buffer | Input Octets | Input Overrun | Input Oversize Frame | Input Total | Input Runts | Input Short Frame | Input Underrun | Input Unicast | Input Unknown | Input Watchdog | Input With Dribble | Output Babble | Output Broadcast | Output Collision | Output Deferred | Output Discard | Output Errors | Output Jumbo | Output Late Collision | Output Lost Carrier | Output MAC Pause Frames | Output Multicast | Output No Carrier | Output Octets | Output Total | Output Unicast | Last Counter Clear | Input rate | Input Rate Packets | Output Rate | Output Rate Packets | Load Interval | RX | TX |
| --------- | ----------- | ----------- | ------- | ------------------ | ------------- | ---------- | ----------- | ---------------- | ---------- | ---------- | ------ | --------- | ----- | ---------- | ---------- | ------ | --- | --------- | ---- | ---------------------- | ------------------- | -------------- | --------------- | ------------------- | ------------------ | ------------- | ----------------- | -------------------- | --------- | ----------- | ------------------ | ------ | ---------- | ------- | ------- | -------------------- | --------------- | ---------------- | ------------- | ------------ | --------------- | ------------- | ---------------------- | --------------- | --------------- | ------------ | ------------- | -------------------- | ----------- | ----------- | ----------------- | -------------- | ------------- | ------------- | -------------- | ------------------ | ------------- | ---------------- | ---------------- | --------------- | -------------- | ------------- | ------------ | --------------------- | ------------------- | ----------------------- | ---------------- | ----------------- | ------------- | ------------ | -------------- | ------------------ | ---------- | ------------------ | ----------- | ------------------- | ------------- | -- | -- |{% for interface in to_parse_interface %}
| {{ interface }} | {% if to_parse_interface[interface].description is defined %}{{ to_parse_interface[interface].description }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].admin_state is defined %}{{ to_parse_interface[interface].admin_state }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].enabled is defined %}{{ to_parse_interface[interface].enabled }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].oper_status is defined %}{{ to_parse_interface[interface].oper_status }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].line_protocol is defined %}{{ to_parse_interface[interface].line_protocol }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].link_state is defined %}{{ to_parse_interface[interface].link_state }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].mac_address is defined %}{{ to_parse_interface[interface].mac_address }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].phys_address is defined %}{{ to_parse_interface[interface].phys_address }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].ipv4 is defined %}{% for ip in to_parse_interface[interface].ipv4 %}{{ ip }}{% endfor%}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].port_speed is defined %}{{ to_parse_interface[interface].port_speed }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].duplex_mode is defined %}{{ to_parse_interface[interface].duplex_mode }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].bandwidth is defined %}{{ to_parse_interface[interface].bandwidth }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].delay is defined %}{{ to_parse_interface[interface].delay }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].media_type is defined %}{{ to_parse_interface[interface].media_type }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].ethertype is defined %}{{ to_parse_interface[interface].ethertype }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].medium is defined %}{{ to_parse_interface[interface].medium }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].mtu is defined %}{{ to_parse_interface[interface].mtu }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].port_mode is defined %}{{ to_parse_interface[interface].port_mode }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].types is defined %}{{ to_parse_interface[interface].types }}{% else %}N/A{% endif %} | {% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_int) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_int }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{{ interface }}{% else %}N/A{% endif %}{% endif %} | {% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_member }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{% for member in to_parse_interface[interface].port_channel.port_channel_member_intfs %}{{ member }}{% endfor %}{% else %}N/A{% endif %}{% endif %} | {% if to_parse_interface[interface].last_link_flapped is defined %}{{ to_parse_interface[interface].last_link_flapped }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].interface_reset is defined %}{{ to_parse_interface[interface].interface_reset }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].dedicated_interface is defined %}{{ to_parse_interface[interface].dedicated_interface }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].efficient_ethernet is defined %}{{ to_parse_interface[interface].efficient_ethernet }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].encapsulations is defined %}{{ to_parse_interface[interface].encapsulations.encapsulation }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].flow_control is defined %}{{ to_parse_interface[interface].flow_control.send }} | {{ to_parse_interface[interface].flow_control.receive }}{% else %}N/A | N/A{% endif %} | {% if to_parse_interface[interface].auto_mdix is defined %}{{ to_parse_interface[interface].auto_mdix }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].reliability is defined %}{{ to_parse_interface[interface].reliability }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].switchport_monitor is defined %}{{ to_parse_interface[interface].switchport_monitor }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].beacon is defined %}{{ to_parse_interface[interface].beacon }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].autostate is defined %}{{ to_parse_interface[interface].autostate }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].rxload is defined %}{{ to_parse_interface[interface].rxload }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].txload is defined %}{{ to_parse_interface[interface].txload }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters is defined %}{% if to_parse_interface[interface].counters.in_bad_etype_drop is defined %}{{ to_parse_interface[interface].counters.in_bad_etype_drop }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.in_broadcast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_crc_errors is defined %}{{ to_parse_interface[interface].counters.in_crc_errors }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_discard is defined %}{{ to_parse_interface[interface].counters.in_discard }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_errors is defined %}{{ to_parse_interface[interface].counters.in_errors }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_if_down_drop is defined %}{{ to_parse_interface[interface].counters.in_if_down_drop }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_ignored is defined %}{{ to_parse_interface[interface].counters.in_ignored }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.in_mac_pause_frames }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_multicast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_no_buffer is defined %}{{ to_parse_interface[interface].counters.in_no_buffer }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_octets is defined %}{{ to_parse_interface[interface].counters.in_octets }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_overrun is defined %}{{ to_parse_interface[interface].counters.in_overrun }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_oversize_frame is defined %}{{ to_parse_interface[interface].counters.in_oversize_frame }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_pkts is defined %}{{ to_parse_interface[interface].counters.in_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_runts is defined %}{{ to_parse_interface[interface].counters.in_runts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_short_frame is defined %}{{ to_parse_interface[interface].counters.in_short_frame }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_underrun is defined %}{{ to_parse_interface[interface].counters.in_underrun }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_unicast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_unknown_protos is defined %}{{ to_parse_interface[interface].counters.in_unknown_protos }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_watchdog is defined %}{{ to_parse_interface[interface].counters.in_watchdog }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_with_dribble is defined %}{{ to_parse_interface[interface].counters.in_with_dribble }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_babble is defined %}{{ to_parse_interface[interface].counters.out_babble }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.out_broadcast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_collision is defined %}{{ to_parse_interface[interface].counters.out_collision }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_deferred is defined %}{{ to_parse_interface[interface].counters.out_deferred }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_discard is defined %}{{ to_parse_interface[interface].counters.out_discard }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_errors is defined %}{{ to_parse_interface[interface].counters.out_errors }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_jumbo_packets is defined %}{{ to_parse_interface[interface].counters.out_jumbo_packets }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_late_collision is defined %}{{ to_parse_interface[interface].counters.out_late_collision }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_lost_carrier is defined %}{{ to_parse_interface[interface].counters.out_lost_carrier }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.out_mac_pause_frames }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_multicast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_no_carrier is defined %}{{ to_parse_interface[interface].counters.out_no_carrier }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_octets is defined %}{{ to_parse_interface[interface].counters.out_octets }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_pkts is defined %}{{ to_parse_interface[interface].counters.out_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_unicast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.last_clear is defined %}{{ to_parse_interface[interface].counters.last_clear }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.rate is defined %}{% if to_parse_interface[interface].counters.rate.in_rate is defined %}{{ to_parse_interface[interface].counters.rate.in_rate }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.rate.in_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.in_rate_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.rate.out_rate is defined %}{{ to_parse_interface[interface].counters.rate.out_rate }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.rate.out_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.out_rate_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.rate.load_interval is defined %}{{ to_parse_interface[interface].counters.rate.load_interval }}{% else %}N/A{% endif %}{% else %}N/A | N/A | N/A | N/A | N/A{% endif %} | {% if to_parse_interface[interface].counters.rx is defined %}{{ to_parse_interface[interface].counters.rx }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.tx is defined %}{{ to_parse_interface[interface].counters.tx }}{% else %}N/A{% endif %}{% else %}N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A {% endif %}|{% endfor %}{% else %}
<html><head><link rel="stylesheet" href="../../../styles.css"></head><body>
<h1>Show Interface</h1>
<table class="merlin-table">
  <thead>
  <tr>
   <th>Interface</th>
   <th>Description</th>
   <th>Admin State</th>
   <th>Enabled</th>
   <th>Operational Status</th>
   <th>Line Protocol</th>
   <th>Link State</th>
   <th>MAC Address</th>
   <th>Phsyical Address</th>
   <th>IP Address</th>
   <th>Port Speed</th>
   <th>Duplex</th>
   <th>Bandwidth</th>
   <th>Delay</th>
   <th>Media Type</th>
   <th>Ether Type</th>
   <th>Medium</th>
   <th>MTU</th>
   <th>Port Mode</th>
   <th>Type</th>
   <th>Port Channel Interface</th>
   <th>Port Channel Member</th>
   <th>Last Link Flap</th>
   <th>Interface Reset</th>
   <th>Dedicated Interface</th>
   <th>Efficient Ethernet</th>
   <th>Encapsulation</th>
   <th>Flow Control Send</th>
   <th>Flow Control Receive</th>
   <th>Auto MDIX</th>
   <th>Reliability</th>
   <th>Switchport Monitor</th>
   <th>Beacon</th>
   <th>Auto State</th>
   <th>RX Load</th>
   <th>TX Load</th>
   <th>Input Bad Etype Drop</th>
   <th>Input Broadcast</th>
   <th>Input CRC Errors</th>
   <th>Input Discard</th>
   <th>Input Errors</th>
   <th>Input Down Drop</th>
   <th>Input Ignored</th>
   <th>Input MAC Pause Frames</th>
   <th>Input Multicast</th>
   <th>Input No Buffer</th>
   <th>Input Octets</th>
   <th>Input Overrun</th>
   <th>Input Oversize Frame</th>
   <th>Input Total</th>
   <th>Input Runts</th>
   <th>Input Short Frame</th>
   <th>Input Underrun</th>
   <th>Input Unicast</th>
   <th>Input Unknown</th>
   <th>Input Watchdog</th>
   <th>Input With Dribble</th>
   <th>Output Babble</th>
   <th>Output Broadcast</th>
   <th>Output Collision</th>
   <th>Output Deferred</th>
   <th>Output Discard</th>
   <th>Output Errors</th>
   <th>Output Jumbo</th>
   <th>Output Late Collision</th>
   <th>Output Lost Carrier</th>
   <th>Output MAC Pause Frames</th>
   <th>Output Multicast</th>
   <th>Output No Carrier</th>
   <th>Output Octets</th>
   <th>Output Total</th>
   <th>Output Unicast</th>
   <th>Last Counter Clear</th>
   <th>Input rate</th>
   <th>Input Rate Packets</th>
   <th>Output Rate</th>
   <th>Output Rate Packets</th>
   <th>Load Interval</th>
   <th>RX</th>
   <th>TX</th>
  </tr>
  </thead>
  <tbody>{% for interface in to_parse_interface %}
  <tr>
    <td>{{ interface }}</td>
    <td>{% if to_parse_interface[interface].description is defined %}{{ to_parse_interface[interface].description }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].admin_state is defined %}{{ to_parse_interface[interface].admin_state }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].enabled is defined %}{{ to_parse_interface[interface].enabled }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].oper_status is defined %}{{ to_parse_interface[interface].oper_status }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].line_protocol is defined %}{{ to_parse_interface[interface].line_protocol }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].link_state is defined %}{{ to_parse_interface[interface].link_state }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].mac_address is defined %}{{ to_parse_interface[interface].mac_address }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].phys_address is defined %}{{ to_parse_interface[interface].phys_address }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].ipv4 is defined %}{% for ip in to_parse_interface[interface].ipv4 %}{{ ip }}{% endfor%}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].port_speed is defined %}{{ to_parse_interface[interface].port_speed }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].duplex_mode is defined %}{{ to_parse_interface[interface].duplex_mode }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].bandwidth is defined %}{{ to_parse_interface[interface].bandwidth }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].delay is defined %}{{ to_parse_interface[interface].delay }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].media_type is defined %}{{ to_parse_interface[interface].media_type }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].ethertype is defined %}{{ to_parse_interface[interface].ethertype }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].medium is defined %}{{ to_parse_interface[interface].medium }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].mtu is defined %}{{ to_parse_interface[interface].mtu }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].port_mode is defined %}{{ to_parse_interface[interface].port_mode }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].types is defined %}{{ to_parse_interface[interface].types }}{% else %}N/A{% endif %}</td>
    <td>{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_int) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_int }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{{ interface }}{% else %}N/A{% endif %}{% endif %}</td>
    <td>{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_member }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{% for member in to_parse_interface[interface].port_channel.port_channel_member_intfs %}{{ member }}{% endfor %}{% else %}N/A{% endif %}{% endif %}</td>
    <td>{% if to_parse_interface[interface].last_link_flapped is defined %}{{ to_parse_interface[interface].last_link_flapped }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].interface_reset is defined %}{{ to_parse_interface[interface].interface_reset }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].dedicated_interface is defined %}{{ to_parse_interface[interface].dedicated_interface }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].efficient_ethernet is defined %}{{ to_parse_interface[interface].efficient_ethernet }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].encapsulations is defined %}{{ to_parse_interface[interface].encapsulations.encapsulation }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].flow_control is defined %}{{ to_parse_interface[interface].flow_control.send }}</td><td>{{ to_parse_interface[interface].flow_control.receive }}{% else %}N/A</td>
    <td>N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].auto_mdix is defined %}{{ to_parse_interface[interface].auto_mdix }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].reliability is defined %}{{ to_parse_interface[interface].reliability }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].switchport_monitor is defined %}{{ to_parse_interface[interface].switchport_monitor }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].beacon is defined %}{{ to_parse_interface[interface].beacon }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].autostate is defined %}{{ to_parse_interface[interface].autostate }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].rxload is defined %}{{ to_parse_interface[interface].rxload }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].txload is defined %}{{ to_parse_interface[interface].txload }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters is defined %}{% if to_parse_interface[interface].counters.in_bad_etype_drop is defined %}{{ to_parse_interface[interface].counters.in_bad_etype_drop }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.in_broadcast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_crc_errors is defined %}{{ to_parse_interface[interface].counters.in_crc_errors }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_discard is defined %}{{ to_parse_interface[interface].counters.in_discard }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_errors is defined %}{{ to_parse_interface[interface].counters.in_errors }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_if_down_drop is defined %}{{ to_parse_interface[interface].counters.in_if_down_drop }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_ignored is defined %}{{ to_parse_interface[interface].counters.in_ignored }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.in_mac_pause_frames }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_multicast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_no_buffer is defined %}{{ to_parse_interface[interface].counters.in_no_buffer }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_octets is defined %}{{ to_parse_interface[interface].counters.in_octets }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_overrun is defined %}{{ to_parse_interface[interface].counters.in_overrun }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_oversize_frame is defined %}{{ to_parse_interface[interface].counters.in_oversize_frame }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_pkts is defined %}{{ to_parse_interface[interface].counters.in_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_runts is defined %}{{ to_parse_interface[interface].counters.in_runts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_short_frame is defined %}{{ to_parse_interface[interface].counters.in_short_frame }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_underrun is defined %}{{ to_parse_interface[interface].counters.in_underrun }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_unicast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_unknown_protos is defined %}{{ to_parse_interface[interface].counters.in_unknown_protos }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_watchdog is defined %}{{ to_parse_interface[interface].counters.in_watchdog }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_with_dribble is defined %}{{ to_parse_interface[interface].counters.in_with_dribble }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_babble is defined %}{{ to_parse_interface[interface].counters.out_babble }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.out_broadcast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_collision is defined %}{{ to_parse_interface[interface].counters.out_collision }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_deferred is defined %}{{ to_parse_interface[interface].counters.out_deferred }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_discard is defined %}{{ to_parse_interface[interface].counters.out_discard }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_errors is defined %}{{ to_parse_interface[interface].counters.out_errors }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_jumbo_packets is defined %}{{ to_parse_interface[interface].counters.out_jumbo_packets }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_late_collision is defined %}{{ to_parse_interface[interface].counters.out_late_collision }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_lost_carrier is defined %}{{ to_parse_interface[interface].counters.out_lost_carrier }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.out_mac_pause_frames }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_multicast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_no_carrier is defined %}{{ to_parse_interface[interface].counters.out_no_carrier }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_octets is defined %}{{ to_parse_interface[interface].counters.out_octets }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_pkts is defined %}{{ to_parse_interface[interface].counters.out_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_unicast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.last_clear is defined %}{{ to_parse_interface[interface].counters.last_clear }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rate is defined %}{% if to_parse_interface[interface].counters.rate.in_rate is defined %}{{ to_parse_interface[interface].counters.rate.in_rate }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rate.in_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.in_rate_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rate.out_rate is defined %}{{ to_parse_interface[interface].counters.rate.out_rate }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rate.out_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.out_rate_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rate.load_interval is defined %}{{ to_parse_interface[interface].counters.rate.load_interval }}{% else %}N/A{% endif %}{% else %}N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rx is defined %}{{ to_parse_interface[interface].counters.rx }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.tx is defined %}{{ to_parse_interface[interface].counters.tx }}{% else %}N/A{% endif %}{% else %}N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A{% endif %}</td>
  </tr>
  </tbody>{% endfor %}
</table>
</body></html>{% endif %}{% endif %}